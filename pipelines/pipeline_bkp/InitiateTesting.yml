##############################################################################################################
#                                                                                                            #
# InitiateTesting_pipeline.yml : Starts testing for a specific repo on specific stage                        #
#                                                                                                            #
# ####### Inputs ########                                                                                    #
# branch: (Mandatory) Which branch should be referred for test cases                                         #
# environment: (Mandatory) On which stage should be Test triggered                                           #
# repoName: (Mandatory) Name of the corresponding repository.                                                #
##############################################################################################################

trigger:
- none

variables:
- group: github_group
- name: repoPath
  value: $(gitOwner)/$(repoName)

pool:
  vmImage: ubuntu-latest
resources:
  repositories:
  - repository: projectRepo
    type: github
    endpoint: github
    name: $(repoPath)
    ref: $(branch)
steps:
- checkout: projectRepo
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: $(repoName)
- checkout: self
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: self
  
- bash: |
    cd ../
    source=$(echo $(resources.triggeringAlias))
    
    if [ -z "$source" ]; then
      source=$(echo $(environment))
      cd $(repoName)
    fi
    echo "##vso[task.setvariable variable=source_type]${source}"
    echo $(System.DefaultWorkingDirectory)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Get Environment Tenant Details'

- script: |
    cd ../$(repoName)
    pwd
    echo $(source_type)
    echo "newman run ./resources/test/wmio_test.json -e ./resources/test/environments/$(source_type).json --env-var "project=$(repoName)" --reporters cli,junit --reporter-junit-export $(System.DefaultWorkingDirectory)/$(source_type)/results/junitReport.xml
    ls -ltr $(System.DefaultWorkingDirectory)/$(source_type)/results/"    

    newman run ./resources/test/wmio_test.json -e ./resources/test/environments/$(source_type).json --env-var "project=$(repoName)" --reporters cli,junit --reporter-junit-export $(System.DefaultWorkingDirectory)/$(source_type)/results/junitReport.xml
    ls -ltr $(System.DefaultWorkingDirectory)/$(source_type)/results/
  displayName: 'Run newman'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/$(source_type)/results'
    failTaskOnFailedTests: true
    testRunTitle: '$(source_type) Test Run'